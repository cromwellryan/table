{"version":3,"file":"public/scripts/app.js","sources":["app/config/app.coffee","app/config/environment.coffee","app/config/router.coffee","app/config/store.coffee","app/controllers/people_controller.coffee","app/initialize.coffee","app/initializers/environment.coffee","app/models/person.coffee","app/routes/index.coffee","app/routes/people.coffee","app/templates/application.hbs","app/templates/index.hbs","app/templates/people.hbs","app/templates/person.hbs","config/environments/development.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;OAAM;;AAEN,GAAM,CAAH;CACD,EACE,IADF;CACE,CAAgC,EAAhC;EACgC,EAAhC,CADA,mBACA;CADA,CAEgC,EAAhC;CAFA,CAGgC,EAAhC;CAHA,CAIgC,EAAhC;CAJA,CAKgC,EAAhC;CANF;EAQA,CAAgC,CAAtB,CAAL,IAAL;CACE;KAAQ,CAAL,EAAH;CACE,EAAU,CAAkB,CAAb,CAAf;GACiC,EAA5B,CAAL,QAAoB;CADpB,EAEmB,EAAd,CAAL;CACM,EAAa,EAAd,CAAO,OAAZ;MAJF;CAMQ,CAA2B,GAA5B,CAAO,MAAZ;KAP4B;CAAhC,EAAgC;CARhC,CAkBA,CAA2B,CAlB3B,CAkBK,aAAL;CAlBA,CAoBA,CACqB,EADhB,CAAO,OAAZ,MACG;EAtBL;CAyBE,EAAU,IAAV;CA3BF;;AA6BA,CA7BA,EA6BiB,EAAK,CAAhB,CAAN,IAAkC;A;;;AC3BlC;;GAA6B,CAA7B,EAAM,CAAQ,EAAgB;CAC5B,GAAuB;CAAf,KAAR;GAD2B;;;AAG7B,CAHA,EAGc,EAAK,CAAO,KAA1B;CACE,IAAa,CAAb,EAAsB;CAAtB,CACA,GAAoB,CAAL,EAAc,KAA7B;CADA,CAEA,GAAmB,CAAL,EAAc,IAA5B;CANF,CAGc;;AAKd,CARA,EAQiB,GAAX,CAAN,EAAiB,EAAW;A;;;ACV5B,CAAO,EAAU,GAAX,CAAN,EAAgC;CAE9B,EAAoB,CAAnB,IAAD,CAAoB;CAClB,CACE,EADF;CACE,CAAM,EAAN;EACA,IAFF,GAEE;CACA,GAAC,CAAD;CAHF,IAEE;CAFF,GAMA;CAPF,EAAoB;CAFU;A;;;ACAhC,CAAO,CAAY,CAAF,EAAQ,CAAnB,CAAN;CACE;CADF,CAAiB;A;;;ACAjB,CAAI,EAAD,EAAyB,CAAL,SAAqB,CAA5C;CACE,KAAgB,QAAhB;EACA,EADA,SACA;CADA,CAEA,CAAc,QAAd;CACK,EAAD,CAAC,OAAD;CADS,EAAC,IAAD;CAHf,CAAuB;A;;;ACCvB;;MAAM,CAAO;;AACb,CADA,MACA;;AAIA,CALA,CAMkB,CADJ,QAAd,CAAc;;AAKd,CAVA,EAUoB,IAApB,EAAqB,EAAV;CAEF,EAAsB,CAA7B,EAAM,CAAQ,EAAd;CACc,GAAR;CADN,EAA6B,GAEnB,CAFV,EAEW;CAAmB,KAAR;CAFtB,EAEU;CAJQ;A;;;ACXpB;;OAAM;;AAEN,CAFA,EAEiB,EAAK,CAAhB,CAAN,IAAkC;CAChC;EAEA,CAAY,MAAC,CAAb,CAAY;CACV,CACsB,CADtB,QAAW,OAAX;CAC2B,CAAa,GAAb;EAA+B,EAA/B,EAAoB;CAD/C;CAGY,CAAqB,GAAjC;CANF,EAEY;CALd,CAEiB;A;;;ACFjB,CAAI,CAAW,CAAZ,EAAkB,CAArB;CACE;EACA,EAAO,CAAP;CAFF,CAAa;;CAKb;;;;;;;;;;;;;;AALA;A;;;ACAA,CAAO,EAAU,EAAsB,CAAjC,CAAN,GAAiB;CACf,EAAO,EAAP,IAAO;CACK,KAAM,GAAP,EAAT;CAAwB,CACX,CAAT,CAAS,EAAT,EAAS;CAFR,KACL;CADF,EAAO;CADT,CAAkC;A;;;ACAlC,CAAI,EAAD,EAAoB,CAAL,KAAlB;CACE,EAAO,EAAP,IAAO;CACL,GAAQ,CAAK,GAAN;CADT,EAAO;CADT,CAAkB;A;;CCAlB;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;;A;ACAA,CAAO,EACL,GADI,GAAN;CACE;CADF;A","sourcesContent":["env = require 'config/environment'\n\nif env.get('isDevelopment')\n  options =\n    LOG_TRANSITIONS:                true\n    LOG_TRANSITIONS_INTERNAL:       false\n    LOG_STACKTRACE_ON_DEPRECATION:  true\n    LOG_BINDINGS:                   true\n    LOG_VIEW_LOOKUPS:               true\n    LOG_ACTIVE_GENERATION:          true\n\n  Ember.RSVP.configure 'onerror', (error) ->\n    if Ember.typeOf(error) is 'object'\n      message = error?.message or 'No error message'\n      Ember.Logger.error(\"RSVP Error: #{message}\")\n      Ember.Logger.error(error?.stack)\n      Ember.Logger.error(error?.object)\n    else\n      Ember.Logger.error 'RSVP Error', error\n\n  # Log view render times to the console\n  Ember.STRUCTURED_PROFILE = true\n\n  Ember.Logger.debug(\n    \"Running in the %c#{env.get('name')}%c environment\", 'color: red;', ''\n  )\nelse\n  options = {}\n\nmodule.exports = Ember.Application.create(options)\n","# Require all of the config/environments files. /config.coffee controls which\n# environment files will be loaded.\nwindow.require.list().filter (module) ->\n  require(module) if new RegExp(\"^config/environments/\").test(module)\n\nEnvironment = Ember.Object.extend\n  isTest: Ember.computed.equal('name', 'test')\n  isDevelopment: Ember.computed.equal('name', 'development')\n  isProduction: Ember.computed.equal('name', 'production')\n\nmodule.exports = Environment.create(window.TAPAS_ENV)\n","module.exports = App.Router.map ->\n  # put your routes here\n  @resource \"people\", ->\n    @resource \"person\",\n      path: \"/person/:person_id\"\n    , ->\n      @route \"edit\"\n      return\n\n    @route \"add\"\n    return\n\n  return\n","module.exports = FP.Store.extend(\n  firebaseRoot: \"https://glaring-fire-8110.firebaseio.com/\"\n)\n","App.PeopleController = Ember.ArrayController.extend(\n  sortProperties: ['name']\n  sortAscending: true\n  peopleCount: (->\n      @get('model.length')\n  ).property('@each')\n)\n","# ===== Config =====\nwindow.App = require 'config/app'\nrequire 'config/router'\n\n# Load all modules in order automagically. Ember likes things to work this\n# way so everything is in the App.* namespace.\nfolderOrder = [\n  'initializers', 'utils', 'mixins', 'adapters', 'serializers', 'routes',\n  'models', 'views', 'controllers', 'helpers', 'templates', 'components'\n]\n\nfolderOrder.forEach (folder) ->\n  # Go through the prefixes in order and require them\n  window.require.list().filter((module) ->\n    new RegExp(\"^#{folder}/\").test(module)\n  ).forEach((module) -> require(module))\n","env = require 'config/environment'\n\nmodule.exports = Ember.Application.initializer\n  name: 'environment'\n\n  initialize: (container, application) ->\n    application.register(\n      'environment:main', env, instantiate: false, singleton: true\n    )\n    application.inject('controller', 'env', 'environment:main')\n","App.Person = FP.Model.extend(\n  name: FP.attr()\n  email: FP.attr()\n)\n\n###\nApp.Person.FIXTURES = [\n  {\n    id: 1\n    name: 'Patrick Simpson'\n    email: 'izerop@gmail.com'\n  },\n  {\n    id: 2\n    name: 'Sizzle Pea'\n    email: 'patrick@heysparkbox.com'\n  }\n]\n###\n","module.exports = App.IndexRoute = Ember.Route.extend\n  model: ->\n    EmberFire.Object.create({\n        ref: new Firebase \"https://glaring-fire-8110.firebaseio.com/\"\n      }\n    )\n","App.PeopleRoute = Ember.Route.extend(\n  model: ->\n    return @store.find('person')\n)\n","module.exports = Ember.TEMPLATES['application'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', hashTypes, hashContexts, escapeExpression=this.escapeExpression;\n\n\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"outlet\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\");\n  return buffer;\n  \n});","module.exports = Ember.TEMPLATES['index'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashTypes, hashContexts, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n    <li>\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"person\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</li>\\n  \");\n  return buffer;\n  }\n\n  data.buffer.push(\"<h2>Table</h2>\\n<ul>\\n  \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"person\", \"in\", \"people\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n</ul>\\n<nav>\\n  <ul>\\n    <li><a href=\\\"create_table\\\">Create Table</a></li>\\n    <li><a href=\\\"person\\\">Add Person</a></li>\\n  </ul>\\n</nav>\\n\");\n  return buffer;\n  \n});","module.exports = Ember.TEMPLATES['people'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashTypes, hashContexts, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n    <li>\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"person.name\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</li>\\n  \");\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  data.buffer.push(\"\\n    <li>Nobody is here...</li>\\n  \");\n  }\n\n  data.buffer.push(\"<div>People: \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"peopleCount\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" </div>\\n<ul>\\n  \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"person\", \"in\", \"controller\", {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n</ul>\\n\");\n  return buffer;\n  \n});","module.exports = Ember.TEMPLATES['person'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashTypes, hashContexts, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, stack2, hashTypes, hashContexts, options;\n  data.buffer.push(\"\\n  <li>\\n  \");\n  hashTypes = {};\n  hashContexts = {};\n  options = {hash:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers['link-to'] || (depth0 && depth0['link-to'])),stack1 ? stack1.call(depth0, \"person\", \"person\", options) : helperMissing.call(depth0, \"link-to\", \"person\", \"person\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n</li>\\n\");\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n    \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"person.name\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n  \");\n  return buffer;\n  }\n\n  data.buffer.push(\"/* /templates/person.hbs\\n*/\\n\\n\");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"person\", \"in\", \"controller\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n\");\n  return buffer;\n  \n});","window.TAPAS_ENV =\n  name: 'development'\n"]}