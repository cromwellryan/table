{"version":3,"file":"public/scripts/app.js","sources":["app/config/app.coffee","app/config/environment.coffee","app/config/router.coffee","app/controllers/index_controller.coffee","app/controllers/person/edit.coffee","app/controllers/person_controller.coffee","app/initialize.coffee","app/initializers/environment.coffee","app/models/person.coffee","app/routes/application.coffee","app/routes/index.coffee","app/routes/new_person.coffee","app/routes/person.coffee","app/templates/application.hbs","app/templates/components/people-list.hbs","app/templates/index.hbs","app/templates/newperson.hbs","app/templates/people.hbs","app/templates/person.hbs","app/views/add_person_view.coffee","config/environments/development.coffee"],"names":[],"mappings":"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D,CAAzB,EAAU,CAAV;CADF,EAAiB;CADnB,CAAkC;A;;;ACKY;A;;;ACL9C,CAAO,EAAU,EAAuB,CAAlC,CAAN,IAAiB;CACf,EAAO,EAAP,CAAO,GAAC;CACL,CAAsB,EAAtB,CAAK,CAAuB,EAA7B;CADF,EAAO;CADT,CAAmC;A;;CCAnC;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhDA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;;A;ACE4C;A;;;ACF5C,CAAO,EACL,GADI,GAAN;CACE;CADF;A","sourcesContent":["env = require 'config/environment'\n\nif env.get('isDevelopment')\n  options =\n    LOG_TRANSITIONS:                true\n    LOG_TRANSITIONS_INTERNAL:       false\n    LOG_STACKTRACE_ON_DEPRECATION:  true\n    LOG_BINDINGS:                   true\n    LOG_VIEW_LOOKUPS:               true\n    LOG_ACTIVE_GENERATION:          true\n\n  Ember.RSVP.configure 'onerror', (error) ->\n    if Ember.typeOf(error) is 'object'\n      message = error?.message or 'No error message'\n      Ember.Logger.error(\"RSVP Error: #{message}\")\n      Ember.Logger.error(error?.stack)\n      Ember.Logger.error(error?.object)\n    else\n      Ember.Logger.error 'RSVP Error', error\n\n  # Log view render times to the console\n  Ember.STRUCTURED_PROFILE = true\n\n  Ember.Logger.debug(\n    \"Running in the %c#{env.get('name')}%c environment\", 'color: red;', ''\n  )\nelse\n  options = {}\n\nmodule.exports = Ember.Application.create(options)\n","# Require all of the config/environments files. /config.coffee controls which\n# environment files will be loaded.\nwindow.require.list().filter (module) ->\n  require(module) if new RegExp(\"^config/environments/\").test(module)\n\nEnvironment = Ember.Object.extend\n  isTest: Ember.computed.equal('name', 'test')\n  isDevelopment: Ember.computed.equal('name', 'development')\n  isProduction: Ember.computed.equal('name', 'production')\n\nmodule.exports = Environment.create(window.TAPAS_ENV)\n","module.exports = App.Router.map ->\n  # put your routes here\n  @resource \"person\", { path: '/person/:person_id' }, ->\n    @route \"edit\"\n\n  @resource \"newperson\", { path: '/newperson'}\n","App.IndexController = Ember.ArrayController.extend()\n","module.exports = App.PersonEditController = Ember.ObjectController.extend()\n","App.PersonController = Ember.ObjectController.extend\n  wins:( ->\n    #@get('name')\n    1\n  ).property('games')\n  add: ->\nApp.NewpersonController = Ember.ObjectController.extend\n  content: ->\n    personName: null\n    personEmail: null\n  actions:\n    addPerson: ->\n      personName = @get('personName')\n      personEmail = @get('personEmail')\n      if personName == undefined or personName == \"\"\n        personName = \"Nobody\"\n      if personEmail == undefined or personEmail == \"\"\n        personEmail = \"nobody@mail.com\"\n      person = @store.createRecord(\"person\",\n        name: personName\n        email: personEmail\n      )\n      person.save()\n      @transitionToRoute('/')\n","# ===== Config =====\nwindow.App = require 'config/app'\nrequire 'config/router'\n\nApp.Store = FP.Store.extend\n  firebaseRoot: \"https://glaring-fire-8110.firebaseio.com\"\n\n# Load all modules in order automagically. Ember likes things to work this\n# way so everything is in the App.* namespace.\nfolderOrder = [\n  'initializers', 'utils', 'mixins', 'adapters', 'serializers', 'routes',\n  'models', 'views', 'controllers', 'helpers', 'templates', 'components'\n]\n\nfolderOrder.forEach (folder) ->\n  # Go through the prefixes in order and require them\n  window.require.list().filter((module) ->\n    new RegExp(\"^#{folder}/\").test(module)\n  ).forEach((module) -> require(module))\n","env = require 'config/environment'\n\nmodule.exports = Ember.Application.initializer\n  name: 'environment'\n\n  initialize: (container, application) ->\n    application.register(\n      'environment:main', env, instantiate: false, singleton: true\n    )\n    application.inject('controller', 'env', 'environment:main')\n","App.Person = FP.Model.extend(\n  name: FP.attr 'string'\n  email: FP.attr 'string'\n  games: FP.hasMany(\"games\", {embedded: false, as: \"games\"})\n)\n","module.exports = App.ApplicationRoute = Ember.Route.extend\n  setupController: (controller, model) ->\n    controller.set('people', @get('store').findAll('person'))\n","module.exports = App.IndexRoute = Ember.Route.extend\n  setupController: (controller, model) ->\n    controller.set('people', @get('store').findAll('person'))\n","","module.exports = App.PersonRoute = Ember.Route.extend\n  model: (params) ->\n    @store.fetch('person', params.person_id)\n\n","module.exports = Ember.TEMPLATES['application'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', hashTypes, hashContexts, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<h1>Table</h1>\\n<header>\\n  <nav>\\n    <ul>\\n      <li><a href=\\\"/\\\">Table Listing</a></li>\\n    </ul>\\n  </nav>\\n</header>\\nPeople on table: \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"people.length\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n<div class=\\\"content\\\">\\n\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"outlet\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n</div>\\n<footer>\\nTable footer \\n</footer>\\n\");\n  return buffer;\n  \n});","module.exports = Ember.TEMPLATES['components/people-list'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, stack2, hashTypes, hashContexts, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, stack2, hashTypes, hashContexts, options;\n  data.buffer.push(\"\\n  <li>\\n  \");\n  hashTypes = {};\n  hashContexts = {};\n  options = {hash:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers['link-to'] || (depth0 && depth0['link-to'])),stack1 ? stack1.call(depth0, \"person\", \"\", options) : helperMissing.call(depth0, \"link-to\", \"person\", \"\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n</li>\\n\");\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n    \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"name\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n  \");\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  data.buffer.push(\"Add Person\");\n  }\n\n  data.buffer.push(\"<h2>People List</h2>\\n<ul>\\n\");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"people\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n</ul>\\n\");\n  hashTypes = {};\n  hashContexts = {};\n  options = {hash:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers['link-to'] || (depth0 && depth0['link-to'])),stack1 ? stack1.call(depth0, \"newperson\", options) : helperMissing.call(depth0, \"link-to\", \"newperson\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n\");\n  return buffer;\n  \n});","module.exports = Ember.TEMPLATES['index'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashContexts, hashTypes, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  hashContexts = {'people': depth0};\n  hashTypes = {'people': \"ID\"};\n  options = {hash:{\n    'people': (\"people\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers['people-list'] || (depth0 && depth0['people-list'])),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"people-list\", options))));\n  data.buffer.push(\"\\n\");\n  return buffer;\n  \n});","module.exports = Ember.TEMPLATES['newperson'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashContexts, hashTypes, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  data.buffer.push(\"<h2>Add Person</h2>\\n<form \");\n  hashContexts = {'on': depth0};\n  hashTypes = {'on': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"addPerson\", {hash:{\n    'on': (\"submit\")\n  },contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">\\n<label for=\\\"personName\\\">Name</label>\\n\");\n  hashContexts = {'type': depth0,'valueBinding': depth0};\n  hashTypes = {'type': \"STRING\",'valueBinding': \"STRING\"};\n  options = {hash:{\n    'type': (\"text\"),\n    'valueBinding': (\"personName\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.input || (depth0 && depth0.input)),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n  data.buffer.push(\"\\n<label for=\\\"personEmail\\\">Email</label>\\n\");\n  hashContexts = {'type': depth0,'valueBinding': depth0};\n  hashTypes = {'type': \"STRING\",'valueBinding': \"STRING\"};\n  options = {hash:{\n    'type': (\"email\"),\n    'valueBinding': (\"personEmail\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.input || (depth0 && depth0.input)),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n  data.buffer.push(\"\\n<button>Add Person</button>\\n</form>\\n\");\n  return buffer;\n  \n});","module.exports = Ember.TEMPLATES['people'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', hashTypes, hashContexts, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<p>people Template</p>\\n\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"outlet\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\");\n  return buffer;\n  \n});","module.exports = Ember.TEMPLATES['person'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashTypes, hashContexts, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n    <p>\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"game.score\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</p>\\n  \");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div class=\\\"profile\\\">\\n  <h2>\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"name\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</h2>\\n  <a href=\\\"#\\\">Challenge</a>\\n  <div class=\\\"stats\\\">\\n    Wins: <span class=\\\"wins\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"wins\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</span>\\n    Losses: <span class=\\\"losses\\\">\");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"losses\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</span>\\n  </div>\\n  \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"games\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n</div>\\n\");\n  return buffer;\n  \n});","","window.TAPAS_ENV =\n  name: 'development'\n"]}